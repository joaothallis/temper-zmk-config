
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define MOUSE   5
#define WINNAV  6

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        combo_ctrl_backspace {
            bindings = <&kp RC(BACKSPACE)>;
            key-positions = <22 23>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <28 27>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_ctrl_shift {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <20 21>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <12 13>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_alt+shift {
            bindings = <&kp LA(LEFT_SHIFT)>;
            key-positions = <13 12>;
            timeout-ms = <50>;
            layers = <3>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <1>;    // <---[[the W key]]
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
&kp Q    &kp W               &kp E        &kp R           &kp T              &kp Y        &kp U    &kp I           &kp O         &kp P
&kp A    &kp S               &kp D        &kp F           &kp G              &kp H        &kp J    &kp K           &kp L         &kp SEMICOLON
&kp Z    &kp X               &kp C        &kp V           &kp B              &kp N        &kp M    &kp COMMA       &kp DOT       &kp FSLH
         &kp C_PLAY_PAUSE    &kp RCTRL    &kp LEFT_ALT    &kp RIGHT_SHIFT    &kp SPACE    &to 1    &kp LEFT_WIN    &kp C_MUTE
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        symbol_layer {
            label = "Symbols";
            bindings = <
&kp ESC    &kp AT_SIGN    &kp HASH     &kp DOLLAR    &kp PERCENT        &kp CARET           &kp AMPERSAND           &kp ASTERISK             &kp EXCLAMATION      &kp BACKSPACE
&kp TAB    &kp EQUAL      &kp PLUS     &kp MINUS     &kp UNDERSCORE     &kp LEFT_BRACE      &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS    &kp RIGHT_BRACE      &kp ENTER
&to 4      &kp GRAVE      &kp TILDE    &kp PIPE      &kp BACKSLASH      &kp LEFT_BRACKET    &kp DOUBLE_QUOTES       &kp SINGLE_QUOTE         &kp RIGHT_BRACKET    &to 2
           &kp X          &kp RCTRL    &to 0         &kp RIGHT_SHIFT    &kp SPACE           &to 3                   &kp LEFT_ALT             &kp Y
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>,
                <&inc_dec_kp C_NEXT K_PREV>;
        };

        nav_layer {
            label = "Navigation";
            bindings = <
&kp ESCAPE    &mkp LCLK         &mmv MOVE_UP      &mkp RCLK          &trans            &msc SCRL_LEFT    &msc SCRL_DOWN    &msc SCRL_UP     &msc SCRL_RIGHT    &kp BACKSPACE
&kp TAB       &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_RIGHT    &trans            &kp LEFT          &kp DOWN          &kp UP_ARROW     &kp RIGHT          &kp ENTER
&to 4         &kp LEFT_WIN      &mkp MCLK         &trans             &trans            &trans            &trans            &trans           &trans             &to 2
              &trans            &kp LCTRL         &to 0              &kp LEFT_SHIFT    &kp SPACE         &to 2             &kp RIGHT_ALT    &trans
            >;
        };

        num_layer {
            label = "Numbers";
            bindings = <
&kp ESCAPE     &kp CAPS         &kp SCROLLLOCK    &kp KP_NUMLOCK     &kp PG_UP         &kp HOME        &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9    &kp BACKSPACE
&kp LS(TAB)    &kp LS(K_CUT)    &kp LS(K_COPY)    &kp LS(K_PASTE)    &kp LS(PG_DN)     &kp END         &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6    &kp ENTER
&to 4          &kp INSERT       &kp K_UNDO        &kp K_REDO         &kp DELETE        &kp NUMBER_0    &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3    &to 2
               &trans           &kp RCTRL         &to 0              &kp LEFT_SHIFT    &kp SPACE       &to 1           &kp LEFT_ALT    &trans
            >;
        };

        function_layer {
            label = "Function_&_Media";
            bindings = <
&kp ESCAPE    &kp C_BRIGHTNESS_DEC    &trans              &kp C_BRIGHTNESS_INC    &trans            &kp F9       &kp F10    &kp F11          &kp F12    &kp BACKSPACE
&kp TAB       &kp C_PREVIOUS          &kp C_PLAY_PAUSE    &kp C_NEXT              &trans            &kp F5       &kp F6     &kp F7           &kp F8     &kp ENTER
&to 4         &trans                  &kp C_MUTE          &trans                  &to 5             &kp F1       &kp F2     &kp F3           &kp F4     &to 2
              &trans                  &kp LCTRL           &to 0                   &kp LEFT_SHIFT    &kp SPACE    &to 3      &kp RIGHT_ALT    &trans
            >;
        };

        settings_layer {
            label = "settings";
            bindings = <
&kp ESCAPE    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_CLR        &trans       &trans         &trans            &trans        &kp BACKSPACE
&kp TAB       &trans          &bt BT_NXT      &bt BT_PRV      &bt BT_CLR_ALL    &trans       &bootloader    &studio_unlock    &sys_reset    &kp ENTER
&to 4         &trans          &out OUT_BLE    &out OUT_USB    &to 5             &trans       &trans         &trans            &trans        &to 2
              &trans          &kp LCTRL       &to 0           &kp LEFT_SHIFT    &kp SPACE    &to 3          &kp RIGHT_ALT     &trans
            >;
        };
    };
};
